<?xml version="1.0" encoding="UTF-8"?>
<!--
 Permission to use this/these file(s) is subject to the Terms of Use set
 forth in the file Terms_of_Use.txt accompanying this file.
 -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
 <xs:element name="Model" type="Model"></xs:element>
 <xs:complexType name="Model">
  <xs:sequence>
            <xs:element name="MessageFlows" type="MessageFlows" minOccurs="0" maxOccurs="1"/>
   <xs:element name="ApplicationMessages" type="ApplicationMessages">
   </xs:element>
   <xs:element name="Structures" type="Structures"></xs:element>
   <xs:element name="DataTypes" type="DataTypes"></xs:element>
  </xs:sequence>
  <xs:attribute name="name" type="xs:string"></xs:attribute>
  <xs:attribute name="version" type="xs:string">
  <xs:annotation><xs:documentation>
   The version of the interface.
  </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="subVersion" type="xs:string">
  <xs:annotation><xs:documentation>
  Identifies ETI changes within one ETI version
  </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="buildNumber" type="xs:string">
   <xs:annotation><xs:documentation>
    The unique build number of the interface.
   </xs:documentation></xs:annotation>
  </xs:attribute>
 </xs:complexType>
 <xs:complexType name="MessageFlows">
  <xs:sequence>
   <xs:element name="MessageFlow" type="MessageFlow"
    maxOccurs="unbounded" minOccurs="0">
   </xs:element>
  </xs:sequence>
 </xs:complexType>
 <xs:complexType name="MessageFlow">
  <xs:annotation><xs:documentation>
   A "MessageFlow" is a flow diagram describing the system behavior from the user's point of view 
   and is represented as a tree of nodes. A node is either a reference to a message (element "Message") or any other information (element "Node").
  </xs:documentation></xs:annotation>
  <xs:choice>
   <xs:element name="Message" type="Message"></xs:element>
   <xs:element name="Node" type="Node"></xs:element>
  </xs:choice>
  <xs:attribute name="name" type="xs:string"></xs:attribute>
  <xs:attribute name="description" type="xs:string"></xs:attribute>
 </xs:complexType>
 <xs:complexType name="Message">
  <xs:annotation><xs:documentation>
   A "Message" is a node within a message flow tree, representing an "ApplicationMessage".
   A "Message" has a parent node (except in case of that this is the root node) and optional child nodes.
  </xs:documentation></xs:annotation>
  <xs:sequence maxOccurs="unbounded" minOccurs="0">
   <xs:choice>
    <xs:element name="Message" type="Message"></xs:element>
    <xs:element name="Node" type="Node"></xs:element>
   </xs:choice>
  </xs:sequence>
  <xs:attribute name="name" type="xs:string"></xs:attribute>
  <xs:attribute name="package" type="xs:string"></xs:attribute>
        <xs:attribute name="applicationMessageRef" type="xs:string">
   <xs:annotation><xs:documentation>
    The reference to the "ApplicationMessage" definition, represented by this message flow node.
   </xs:documentation></xs:annotation>
        </xs:attribute>
        <xs:attribute name="condition" type="xs:string">
   <xs:annotation><xs:documentation>
    This flow node is only applicable if the condition is true.
   </xs:documentation></xs:annotation>
        </xs:attribute>
  <xs:attribute name="description" type="xs:string"></xs:attribute>
        <xs:attribute name="stream" type="xs:string">
   <xs:annotation><xs:documentation>
    The message is transmitted via this stream (e.g. Listener Data stream).
   </xs:documentation></xs:annotation>
        </xs:attribute>
 </xs:complexType>
 <xs:complexType name="Node">
  <xs:annotation><xs:documentation>
   A general node within a message flow tree containing any kind of information (e.g. grouping, decision).
   This is a general node within a message flow tree, containing any kind of information (e.g. grouping, decision).
   It has a parent node (except in case of that this is the root node) and optional child nodes.
   A child node is either a reference to a message (element "Message") or another information (element "Node").
  </xs:documentation></xs:annotation>
  <xs:sequence maxOccurs="unbounded" minOccurs="0">
   <xs:choice>
    <xs:element name="Message" type="Message"></xs:element>
    <xs:element name="Node" type="Node"></xs:element>
   </xs:choice>
  </xs:sequence>
  <xs:attribute name="name" type="xs:string"></xs:attribute>
  <xs:attribute name="description" type="xs:string"></xs:attribute>
  <xs:attribute name="condition" type="xs:string">
   <xs:annotation><xs:documentation>
    This flow node is only applicable if the condition is true at runtime.
   </xs:documentation></xs:annotation>
  </xs:attribute>
 </xs:complexType>
 <xs:complexType name="ApplicationMessages">
  <xs:sequence>
   <xs:element name="ApplicationMessage" type="ApplicationMessage"
    maxOccurs="unbounded" minOccurs="1">
   </xs:element>
  </xs:sequence>
 </xs:complexType>
 <xs:complexType name="ApplicationMessage">
  <xs:annotation><xs:documentation>
   An "ApplicationMessage" represents a top-level structure which describes a message transmitted between the participant and the exchange.
   In contrast to the definition of the corresponding "Structure", all components and repeating groups are uncollapsed.
   Valid values and description of fields are in "Application Message" scope.
  </xs:documentation></xs:annotation>
  <xs:sequence maxOccurs="unbounded" minOccurs="0">
   <xs:choice>
    <xs:element name="Group" type="Group"></xs:element>
    <xs:element name="Member" type="Member"></xs:element>
   </xs:choice>
  </xs:sequence>
  <xs:attribute name="name" type="xs:string"></xs:attribute>
  <xs:attribute name="numericID" type="xs:positiveInteger"></xs:attribute>
  <xs:attribute name="package" type="package_T"></xs:attribute>
  <xs:attribute name="type" type="xs:string">
   <xs:annotation><xs:documentation>
    The reference to the top-level-structure definition.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="description" type="xs:string"></xs:attribute>
  <xs:attribute name="functionalCategory" type="xs:string">
   <xs:annotation><xs:documentation>
    This attribute is used for grouping the application messages.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="alias" type="xs:string">
   <xs:annotation><xs:documentation>
    The alias name of this "ApplicationMessage" used in the manual.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="service" type="xs:string">
   <xs:annotation><xs:documentation>
    The name of the corresponding core service.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="scopes" type="xs:string"></xs:attribute>
 </xs:complexType>
 <xs:complexType name="Structures">
  <xs:sequence>
   <xs:element name="Structure" type="Structure" maxOccurs="unbounded"
    minOccurs="1"></xs:element>
  </xs:sequence>
  <xs:attribute name="scopes" type="xs:string"></xs:attribute>
 </xs:complexType>
 <xs:complexType name="DataTypes">
  <xs:sequence>
   <xs:element name="DataType" type="DataType" maxOccurs="unbounded"
    minOccurs="1"></xs:element>
  </xs:sequence>
 </xs:complexType>
 <xs:complexType name="DataType">
  <xs:annotation><xs:documentation>
   A "DataType" is the technical and functional description of a data field.
   Each "DataType" is part of a (multi-level) inheritance tree based on the following "rootTypes": String, floatDecimal, int, and data.
  </xs:documentation></xs:annotation>
  <xs:sequence>
   <xs:annotation><xs:documentation>
    A list of valid values. The attribute "nonStrict" indicates if these valid values are exclusive or not.
   </xs:documentation></xs:annotation>
   <xs:element name="ValidValue" type="ValidValue"
    maxOccurs="unbounded" minOccurs="0">
   </xs:element>
  </xs:sequence>
  <xs:attribute name="name" type="xs:string"></xs:attribute>
  <xs:attribute name="type" type="xs:string">
   <xs:annotation><xs:documentation>
    The reference to the "DataType" from which this data type is derived.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="rootType" type="xs:string">
   <xs:annotation><xs:documentation>
    The root "DataType" of this (multi-level) inheritance tree.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="numericID" type="xs:positiveInteger">
   <xs:annotation><xs:documentation>
    The corresponding FIX tag.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="package" type="package_T">
   <xs:annotation><xs:documentation>
    The name of the interface which contains this element (at the moment always ETI).
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="size" type="xs:positiveInteger">
   <xs:annotation><xs:documentation>
    The fixed size of the "DataType" in bytes.
    For variable size strings the maximum possible size in bytes.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="variableSize" type="xs:boolean">
   <xs:annotation><xs:documentation>
    This flag indicates a variable size string field. A counter field (see attribute "counter") contains the transmitted size in bytes.
    The string field is not 0-terminated. A variable size field is always at the end of a message.
    The message is truncated after the next multiple of 8 bytes.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="counter" type="xs:string">
   <xs:annotation><xs:documentation>
    In the case of variable size strings , an additional counter is provided containing the transmitted field size
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="isTerminable" type="xs:boolean">
   <xs:annotation><xs:documentation>
    This flag indicates if a fixed size string field can be optionally 0-terminated or not.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="description" type="xs:string"></xs:attribute>
  <xs:attribute name="minValue" type="xs:string">
   <xs:annotation><xs:documentation>
    The minimum possible value for int, float and floatDecimal "DataTypes".
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="maxValue" type="xs:string">
   <xs:annotation><xs:documentation>
    The maximum possible value for int, float and floatDecimal "DataTypes".
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="range" type="xs:string">
   <xs:annotation><xs:documentation>
    Character ranges for string "DataTypes".
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="precision" type="xs:positiveInteger">
   <xs:annotation><xs:documentation>
    The number of decimal places for floatDecimal "DataTypes".
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="noValue" type="xs:string">
   <xs:annotation><xs:documentation>
    The value in hexadecimal notation which indicates an unused data field member.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="nonStrict" type="xs:boolean">
   <xs:annotation><xs:documentation>
    This attribute indicates if the valid values are exclusive or not.
   </xs:documentation></xs:annotation>
  </xs:attribute>
 </xs:complexType>
 <xs:complexType name="Group">
  <xs:annotation><xs:documentation>
   A "Group" represents a structure (attribute "type") in the context of an "ApplicationMessage".
   In contrast to the definition of the corresponding "Structure", all components and repeating groups are uncollapsed
   and are enhanced by context specific usage information (e.g. mandatory).
  </xs:documentation></xs:annotation>
  <xs:sequence maxOccurs="unbounded" minOccurs="1">
   <xs:choice>
    <xs:element name="Group" type="Group"></xs:element>
    <xs:element name="Member" type="Member"></xs:element>
   </xs:choice>
  </xs:sequence>
  <xs:attribute name="name" type="xs:string"></xs:attribute>
  <xs:attribute name="package" type="package_T">
   <xs:annotation><xs:documentation>
    The name of the interface which contains this element (at the moment always ETI).
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="type" type="xs:string">
   <xs:annotation><xs:documentation>
    The reference to the "Structure" definition.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="minCardinality" type="xs:nonNegativeInteger">
   <xs:annotation><xs:documentation>
    In case of a variable repeated "Group" (sequence) the minimum possible cardinality.
   </xs:documentation></xs:annotation>
  </xs:attribute>
        <xs:attribute name="cardinality" type="xs:positiveInteger">
   <xs:annotation><xs:documentation>
    In case of a variable repeated "Group" the maximum possible cardinality otherwise always "1".
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="counter" type="xs:string">
   <xs:annotation><xs:documentation>
    In case of a variable repeated "Group" the data field member that contains the number of transmitted records.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="description" type="xs:string"></xs:attribute>
  <xs:attribute name="scopes" type="xs:string"></xs:attribute>
 </xs:complexType>
 <xs:complexType name="Member">
  <xs:annotation><xs:documentation>
   A "Member" represents a data field member in the context of an "ApplicationMessage".
   In contrast to the referred data field member, "Member" is enhanced by context specific usage information (e.g. mandatory).
  </xs:documentation></xs:annotation>
  <xs:sequence>
   <xs:annotation><xs:documentation>
    A list of context specific valid values. The list may be a subset of the valid value list of the underlying "DataType".
    The attribute "nonStrict" at the "DataType definition indicates if these valid values are exclusive or not.
   </xs:documentation></xs:annotation>
   <xs:element name="ValidValue" type="ValidValue"
    maxOccurs="unbounded" minOccurs="0">
   </xs:element>
  </xs:sequence>
  <xs:attribute name="name" type="xs:string"></xs:attribute>
  <xs:attribute name="hidden" type="xs:boolean">
   <xs:annotation><xs:documentation>
    This data field member is for documentation purposes only and will neither be part of the underlying container structure definition nor be transmitted.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="type" type="xs:string">
   <xs:annotation><xs:documentation>
    The reference to the "DataType" definition.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="package" type="package_T">
   <xs:annotation><xs:documentation>
    The name of the interface which contains this element (at the moment always ETI).
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="numericID" type="xs:positiveInteger">
   <xs:annotation><xs:documentation>
    The corresponding FIX tag of the underlying "DataType".
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="usage" type="usage_T">
   <xs:annotation><xs:documentation>
    Indicates if a data field member can be used or must be set to "No Value".
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="offset" type="xs:nonNegativeInteger">
   <xs:annotation><xs:documentation>
    The offset in bytes of this data field member in the "ApplicationMessage" context.
    By default it is relative to the beginning of the message.
    In case that the data field member is behind a variable sequence, the offset is relativ to the end of the variable sequence.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="offsetBase" type="xs:string">
   <xs:annotation><xs:documentation>
    By default this attribute is not set which means that the offset of a data field member is relativ to the beginning of the message.
    If the data field member is behind a variable sequence the offset is relative to the end of the variable sequence.
    In this case the attribute contains the name of the variable sequence.
   </xs:documentation></xs:annotation>
  </xs:attribute>
        <xs:attribute name="cardinality" type="xs:positiveInteger">
   <xs:annotation><xs:documentation>
    At the moment always "1".
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="counter" type="xs:string">
   <xs:annotation><xs:documentation>
    In case of variable size strings, the reference to the ""DataType"" of the counter data field member which contains the transmitted size in bytes
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="description" type="xs:string"></xs:attribute>
  <xs:attribute name="scopes" type="xs:string"></xs:attribute>
 </xs:complexType>
 <xs:complexType name="Structure">
  <xs:annotation><xs:documentation>
   A "Structure" is either the definition of a top-level-structure ("Message") or of a (repeated) sub-structure.
   Components and repeating groups are provided in a collapsed representation.
   All fields show the complete list of valid values.
  </xs:documentation></xs:annotation>
  <xs:sequence>
   <xs:element name="Member" type="StructureMember"
    maxOccurs="unbounded" minOccurs="0">
   </xs:element>
  </xs:sequence>
  <xs:attribute name="name" type="xs:string"></xs:attribute>
  <xs:attribute name="type" type="xs:string">
   <xs:annotation><xs:documentation>
    Specifies if the structure is a "Message" (top-level-structure),
    a "Container" (unrepeated sub-structure) or
    a "Sequence" (repeated sub-structure).
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="numericID" type="xs:positiveInteger">
   <xs:annotation><xs:documentation>
    In case of a top-level-structure the template ID.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="package" type="package_T">
   <xs:annotation><xs:documentation>
    The name of the interface which contains this element (at the moment always ETI).
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="description" type="xs:string"></xs:attribute>
  <xs:attribute name="scopes" type="xs:string"></xs:attribute>
 </xs:complexType>
 <xs:complexType name="ValidValue">
  <xs:attribute name="name" type="xs:string"></xs:attribute>
  <xs:attribute name="value" type="xs:string"></xs:attribute>
  <xs:attribute name="description" type="xs:string"></xs:attribute>
  <xs:attribute name="scopes" type="xs:string"></xs:attribute>
 </xs:complexType>
 <xs:complexType name="StructureMember">
  <xs:annotation><xs:documentation>
   This is a member within a "Structure" definition referring either a "DataType" (data field member) or a "Structure" (sub-structure).
  </xs:documentation></xs:annotation>
  <xs:attribute name="name" type="xs:string"></xs:attribute>
  <xs:attribute name="type" type="xs:string">
   <xs:annotation><xs:documentation>
    The reference to the "Structure" or "DataType" definition.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="package" type="package_T">
   <xs:annotation><xs:documentation>
    The name of the interface which contains this element (at the moment always ETI).
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="minCardinality" type="xs:nonNegativeInteger">
   <xs:annotation><xs:documentation>
    In case of a variable repeated sub-structure, the minimum possible cardinality.
   </xs:documentation></xs:annotation>
  </xs:attribute>
        <xs:attribute name="cardinality" type="xs:positiveInteger">
   <xs:annotation><xs:documentation>
    In case of a repeated sub-structure, the maximum possible cardinality, otherwise always 1.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="counter" type="xs:string">
   <xs:annotation><xs:documentation>
    In case of a variable repeated sub-structure, the reference to the data field member which contains the number of transmitted records.
    In case of variable size strings, the reference to the ""DataType"" of the counter data field member which contains the transmitted field size in bytes.
   </xs:documentation></xs:annotation>
  </xs:attribute>
  <xs:attribute name="description" type="xs:string"></xs:attribute>
  <xs:attribute name="scopes" type="xs:string"></xs:attribute>
 </xs:complexType>
 <xs:simpleType name="package_T">
  <xs:restriction base="xs:string"/>
 </xs:simpleType>
 <xs:simpleType name="constraint_T">
  <xs:restriction base="xs:string">
   <xs:enumeration value="unique"/>
  </xs:restriction>
 </xs:simpleType>
 <xs:simpleType name="usage_T">
  <xs:restriction base="xs:string">
   <xs:enumeration value="mandatory"/>
   <xs:enumeration value="optional"/>
   <xs:enumeration value="unused"/>
  </xs:restriction>
 </xs:simpleType>
</xs:schema>
