# ***************************************************************************
# *
# * Copyright (c) 2008-2019, Silicom Denmark A/S
# * All rights reserved.
# *
# * Redistribution and use in source and binary forms, with or without
# * modification, are permitted provided that the following conditions are met:
# *
# * 1. Redistributions of source code must retain the above copyright notice,
# * this list of conditions and the following disclaimer.
# *
# * 2. Redistributions in binary form must reproduce the above copyright
# * notice, this list of conditions and the following disclaimer in the
# * documentation and/or other materials provided with the distribution.
# *
# * 3. Neither the name of the Silicom nor the names of its
# * contributors may be used to endorse or promote products derived from
# * this software without specific prior written permission.
# *
# * 4. This software may only be redistributed and used in connection with a
# *  Silicom network adapter product.
# *
# * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# * POSSIBILITY OF SUCH DAMAGE.
# *
# ****************************************************************************

# Derive product name from current directory path
PRODUCT := $(shell echo $(shell basename $(shell dirname $(shell pwd)))|cut -d _ -f 1)
LOWER_PRODUCT := $(shell echo $(PRODUCT) | tr A-Z a-z)
UPPER_PRODUCT := $(shell echo $(PRODUCT) | tr a-z A-Z)

#SC_API_VERSION := $(shell egrep "^PROJECT_NUMBER *= *" ../doc/doxygen.conf|egrep -o "[0-9]+\.[0-9]+\.[0-9]+")
SC_API_VERSION := EKALINE

# Derive include file names from product name
COMMON_FLAGS := -DSC_$(UPPER_PRODUCT)_API=1
COMMON_FLAGS += -DPRODUCT="\"$(PRODUCT)\""
COMMON_FLAGS += -DLOWER_PRODUCT="\"$(LOWER_PRODUCT)\""
COMMON_FLAGS += -DPRODUCT_H="\"$(LOWER_PRODUCT).h\""
COMMON_FLAGS += -DPRODUCT_COMMON_H="\"$(LOWER_PRODUCT)_common.h\""
COMMON_FLAGS += -DPRODUCT_TOOLS_H="\"$(LOWER_PRODUCT)_tools.h\""
COMMON_FLAGS += -DPRODUCT_INTERNAL_H="\"$(LOWER_PRODUCT)_internal.h\""
COMMON_FLAGS += -DSC_API_VERSION="\"$(SC_API_VERSION)\""

GCC_DEBUG_OPTIMIZE := -Og
STRICT_OPTIONAL := 1
CPP_STANDARD := -std=c++0x

GCCVERSION := $(shell $(CPP) -dumpversion)

ifeq "$(GCCVERSION)" "4.4.7"
    # GCC version 4.4.7 on CentOS 6 has various limitations and missing options; do not apply "strict" options.
    GCC_DEBUG_OPTIMIZE := -O0
    STRICT := 0
    STRICT_OPTIONAL := 0
else ifeq  "$(GCCVERSION)" "4.6"
    # GCC version 4.6.3 on Ubuntu 12.04 for example, do not apply "strict" options.
    GCC_DEBUG_OPTIMIZE := -O0
    STRICT := 0
    STRICT_OPTIONAL := 0
else ifeq "$(GCCVERSION)" "4.8"
    # GCC version 4.8.4 on Ubuntu 14.04 has various limitations and missing options; do not apply "strict" options.
    STRICT := 0
    STRICT_OPTIONAL := 0
else ifeq "$(GCCVERSION)" "4.8.2"
    # GCC version 4.8.2 on CentOS 7 has various limitations and missing options; do not apply "strict" options.
    STRICT := 0
    STRICT_OPTIONAL := 0
else ifeq "$(GCCVERSION)" "4.8.5"
    # GCC version 4.8.5 on CentOS 7 has various limitations and missing options; do not apply "strict" options.
    STRICT := 0
    STRICT_OPTIONAL := 0
else ifeq "$(GCCVERSION)" "5.4.0"
    # For example Ubuntu 16.04
    CPP_STANDARD := -std=c++17
else ifeq "$(GCCVERSION)" "7"
    # For example Ubuntu 18.04
    CPP_STANDARD := -std=c++17
endif

# GNU "strict" options:
ifeq "$(STRICT)" "1"
    GNUSTRICT := -Wstrict-aliasing -Wunreachable-code -Wlogical-op -Wno-unused -Winit-self
    GNUSTRICT += -Wformat=2 -Wdisabled-optimization -Wcast-align -Wcast-qual -Wredundant-decls
    GNUSTRICT += -Wshadow -Wundef -Wmissing-include-dirs -pedantic
#    GNUSTRICT += -Wswitch-default
    GNUSTRICT += -Wno-parentheses -Wconversion -Wno-variadic-macros
    GNUSTRICT += -Wstrict-overflow=2 -Wall -Wextra -DSTRICT=$(STRICT)
    GNUSTRICT += -Wno-format-nonliteral -Wno-unknown-pragmas
#    GNUCSTRICT := $(GNUSTRICT) -std=c90
    GNUCSTRICT := $(GNUSTRICT)
    GNUCPPSTRICT := $(GNUSTRICT) -Woverloaded-virtual -Wnoexcept -Wctor-dtor-privacy -Wold-style-cast -Wsign-promo -Wstrict-null-sentinel

    # GNU "optional strict" options
    ifeq "$(STRICT_OPTIONAL)" "1"
        GNUCPPSTRICT += -Weffc++
    endif
else
    GNUCSTRICT := -DSTRICT=0
    GNUCPPSTRICT := $(GNUCSTRICT)
endif
